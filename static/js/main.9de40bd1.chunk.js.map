{"version":3,"sources":["App.module.css","with-auth.jsx","use-field.js","App.jsx","index.js"],"names":["module","exports","WrappedComponent","initialValue","useState","value","setValue","useCallback","nextValue","target","getAssociations","database1","word1","database2","word2","associations","word1Associations","word2Associations","Object","entries","forEach","word","weight","push","sort","association1","association2","withAuth","database","setDatabase","useField","handleWord1Change","handleWord2Change","useDebounce","word1Debounced","word2Debounced","useEffect","a","async","Loader","active","word1Clean","trim","toLowerCase","replace","word2Clean","associationsCustom","custom","associationsSociation","sociation","associationsCustomSociation","associationsSociationCustom","className","styles","header","Container","Grid","padded","Row","columns","Column","column","Input","autoFocus","fluid","placeholder","size","onChange","content","length","words","map","association","i","Label","horizontal","key","classNames","wordRed","wordBlue","wordViolet","useMemo","window","location","hostname","URLSearchParams","search","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9de40bd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__3ZZ1n\",\"content\":\"App_content__3La4L\",\"column\":\"App_column__17gO4\",\"words\":\"App_words__1Oqw2\",\"word\":\"App_word__3aQvw\",\"wordRed\":\"App_wordRed__eipKT\",\"wordBlue\":\"App_wordBlue__1W-MD\",\"wordViolet\":\"App_wordViolet__2YAQA\"};","import React, { useMemo } from 'react';\n\nconst HOSTNAME = 'meltyshev.github.io';\nconst TOKEN = 'w8AbBg';\n\nexport default WrappedComponent => {\n  const Auth = () => {\n    const isAuthenticated = useMemo(() => {\n      if (process.env.NODE_ENV === 'development') {\n        return true;\n      }\n\n      return window.location.hostname === HOSTNAME\n        && new URLSearchParams(window.location.search).get('token') === TOKEN;\n    }, []);\n\n    if (!isAuthenticated) {\n      return 'Unauthorized';\n    }\n\n    return <WrappedComponent />;\n  };\n\n  return Auth;\n};\n","import { useCallback, useState } from 'react';\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(({ target: { value: nextValue } }) => {\n    setValue(nextValue);\n  }, []);\n\n  return [value, handleChange, setValue];\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDebounce } from 'use-debounce';\nimport {\n  Container, Grid, Input, Label, Loader\n} from 'semantic-ui-react';\n\nimport withAuth from './with-auth';\nimport useField from './use-field';\n\nimport styles from './App.module.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst getAssociations = (database1, word1, database2, word2) => {\n  let associations = [];\n\n  if (word1) {\n    const word1Associations = database1[word1];\n\n    if (word2) {\n      const word2Associations = database2[word2];\n\n      if (word1Associations && word2Associations) {\n        Object.entries(word1Associations).forEach(([word, weight]) => {\n          if (word in word2Associations) {\n            associations.push([word, (weight + word2Associations[word]) / 2]);\n          }\n        });\n      }\n    } else if (word1Associations) {\n      associations = Object.entries(word1Associations);\n    }\n\n    associations.sort((association1, association2) => {\n      if (association1[1] > association2[1]) {\n        return -1;\n      }\n\n      if (association1[1] < association2[1]) {\n        return 1;\n      }\n\n      return 0;\n    });\n  }\n\n  return associations;\n};\n\nconst App = () => {\n  const [database, setDatabase] = useState(null);\n\n  const [word1, handleWord1Change] = useField('');\n  const [word2, handleWord2Change] = useField('');\n\n  const [word1Debounced] = useDebounce(word1, 500);\n  const [word2Debounced] = useDebounce(word2, 500);\n\n  useEffect(() => {\n    (async () => {\n      setDatabase(await import('./database.json'));\n    })();\n  }, []);\n\n  if (!database) {\n    return <Loader active>Загружаю базу...</Loader>;\n  }\n\n  const word1Clean = word1Debounced.trim().toLowerCase().replace('ё', 'е');\n  const word2Clean = word2Debounced.trim().toLowerCase().replace('ё', 'е');\n\n  const associationsCustom = getAssociations(\n    database.custom,\n    word1Clean,\n    database.custom,\n    word2Clean,\n  );\n\n  const associationsSociation = getAssociations(\n    database.sociation,\n    word1Clean,\n    database.sociation,\n    word2Clean,\n  );\n\n  let associationsCustomSociation = [];\n  let associationsSociationCustom = [];\n\n  if (word2Clean) {\n    associationsCustomSociation = getAssociations(\n      database.custom,\n      word1Clean,\n      database.sociation,\n      word2Clean,\n    );\n\n    associationsSociationCustom = getAssociations(\n      database.sociation,\n      word1Clean,\n      database.custom,\n      word2Clean,\n    );\n  }\n\n  return (\n    <>\n      <div className={styles.header}>\n        <Container>\n          <Grid padded>\n            <Grid.Row columns={2}>\n              <Grid.Column className={styles.column}>\n                <Input\n                  autoFocus\n                  fluid\n                  value={word1}\n                  placeholder=\"Слово\"\n                  size=\"big\"\n                  onChange={handleWord1Change}\n                />\n              </Grid.Column>\n              <Grid.Column>\n                <Input\n                  fluid\n                  value={word2}\n                  placeholder=\"Вместе со словом\"\n                  size=\"big\"\n                  onChange={handleWord2Change}\n                />\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </Container>\n      </div>\n      <div className={styles.content}>\n        <Container>\n          <Grid padded>\n            {associationsCustom.length > 0 && (\n              <Grid.Row>\n                <div className={styles.words}>\n                  {associationsCustom.map((association, i) => (\n                    <Label\n                      horizontal\n                      key={association[0]}\n                      className={classNames(styles.word, i % 2 || styles.wordRed)}\n                    >\n                      {association[0]}\n                    </Label>\n                  ))}\n                </div>\n              </Grid.Row>\n            )}\n            {associationsSociation.length > 0 && (\n              <Grid.Row>\n                <div className={styles.words}>\n                  {associationsSociation.map((association, i) => (\n                    <Label\n                      horizontal\n                      key={association[0]}\n                      className={classNames(styles.word, i % 2 || styles.wordBlue)}\n                    >\n                      {association[0]}\n                    </Label>\n                  ))}\n                </div>\n              </Grid.Row>\n            )}\n            {associationsCustomSociation.length > 0 && (\n              <Grid.Row>\n                <div className={styles.words}>\n                  {associationsCustomSociation.map((association, i) => (\n                    <Label\n                      horizontal\n                      key={association[0]}\n                      className={classNames(styles.word, i % 2 || styles.wordViolet)}\n                    >\n                      {association[0]}\n                    </Label>\n                  ))}\n                </div>\n              </Grid.Row>\n            )}\n            {associationsSociationCustom.length > 0 && (\n              <Grid.Row>\n                <div className={styles.words}>\n                  {associationsSociationCustom.map((association, i) => (\n                    <Label\n                      horizontal\n                      key={association[0]}\n                      className={classNames(styles.word, i % 2 || styles.wordViolet)}\n                    >\n                      {association[0]}\n                    </Label>\n                  ))}\n                </div>\n              </Grid.Row>\n            )}\n          </Grid>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default withAuth(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}