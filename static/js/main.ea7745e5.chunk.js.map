{"version":3,"sources":["App.module.css","with-auth.jsx","use-field.js","App.jsx","index.js"],"names":["module","exports","WrappedComponent","initialValue","useState","value","setValue","useCallback","nextValue","target","getAssociations","words","word1","word2","associations","word1Associations","word2Associations","Object","entries","forEach","word","weight","push","sort","association1","association2","withAuth","dictionary","setDictionary","useField","handleWord1Change","handleWord2Change","useDebounce","word1Debounced","word2Debounced","useEffect","a","async","Loader","active","word1Clean","trim","toLowerCase","replace","word2Clean","associationsCustom","custom","associationsSociation","sociation","Container","Grid","padded","Row","columns","Column","className","styles","column","Input","autoFocus","fluid","placeholder","size","onChange","length","map","association","i","Label","horizontal","key","classNames","oddCustom","oddSociation","useMemo","window","location","hostname","URLSearchParams","search","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea7745e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"App_column__17gO4\",\"words\":\"App_words__1Oqw2\",\"word\":\"App_word__3aQvw\",\"oddCustom\":\"App_oddCustom__K_glm\",\"oddSociation\":\"App_oddSociation__27Vt-\"};","import React, { useMemo } from 'react';\n\nconst HOSTNAME = 'meltyshev.github.io';\nconst TOKEN = 'Tv27zD';\n\nexport default WrappedComponent => {\n  const Auth = () => {\n    const isAuthenticated = useMemo(() => {\n      if (process.env.NODE_ENV === 'development') {\n        return true;\n      }\n\n      return window.location.hostname === HOSTNAME\n        && new URLSearchParams(window.location.search).get('token') === TOKEN;\n    }, []);\n\n    if (!isAuthenticated) {\n      return 'Unauthorized';\n    }\n\n    return <WrappedComponent />;\n  };\n\n  return Auth;\n};\n","import { useCallback, useState } from 'react';\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(({ target: { value: nextValue } }) => {\n    setValue(nextValue);\n  }, []);\n\n  return [value, handleChange, setValue];\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDebounce } from 'use-debounce';\nimport {\n  Container, Grid, Input, Label, Loader\n} from 'semantic-ui-react';\n\nimport withAuth from './with-auth';\nimport useField from './use-field';\n\nimport styles from './App.module.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst getAssociations = (words, word1, word2) => {\n  let associations = [];\n\n  if (word1) {\n    const word1Associations = words[word1];\n\n    if (word2) {\n      const word2Associations = words[word2];\n  \n      if (word1Associations && word2Associations) {\n        Object.entries(word1Associations).forEach(([word, weight]) => {\n          if (word in word2Associations) {\n            associations.push([word, (weight + word2Associations[word]) / 2]);\n          }\n        });\n      }\n    } else if (word1Associations) {\n      associations = Object.entries(word1Associations);\n    }\n  }\n\n  associations.sort((association1, association2) => {\n    if (association1[1] > association2[1]) {\n      return -1;\n    }\n\n    if (association1[1] < association2[1]) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return associations;\n};\n\nconst App = () => {\n  const [dictionary, setDictionary] = useState(null);\n\n  const [word1, handleWord1Change] = useField('');\n  const [word2, handleWord2Change] = useField('');\n\n  const [word1Debounced] = useDebounce(word1, 500);\n  const [word2Debounced] = useDebounce(word2, 500);\n\n  useEffect(() => {\n    (async () => {\n      setDictionary(await import('./dictionary.json'));\n    })();\n  }, []);\n\n  if (!dictionary) {\n    return <Loader active>Загружаю базу...</Loader>;\n  }\n\n  const word1Clean = word1Debounced.trim().toLowerCase().replace('ё', 'е');\n  const word2Clean = word2Debounced.trim().toLowerCase().replace('ё', 'е');\n\n  const associationsCustom = getAssociations(dictionary.custom, word1Clean, word2Clean);\n  const associationsSociation = getAssociations(dictionary.sociation, word1Clean, word2Clean);\n\n  return (\n    <Container>\n      <Grid padded>\n        <Grid.Row columns={2}>\n          <Grid.Column className={styles.column}>\n            <Input\n              autoFocus\n              fluid\n              value={word1}\n              placeholder=\"Слово\"\n              size=\"big\"\n              onChange={handleWord1Change}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Input\n              fluid\n              value={word2}\n              placeholder=\"Вместе со словом\"\n              size=\"big\"\n              onChange={handleWord2Change}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        {associationsCustom.length > 0 && (\n          <Grid.Row>\n            <div className={styles.words}>\n              {associationsCustom.map((association, i) => (\n                <Label\n                  horizontal\n                  key={association[0]}\n                  className={classNames(styles.word, i % 2 && styles.oddCustom)}\n                >\n                  {association[0]}\n                </Label>\n              ))}\n            </div>\n          </Grid.Row>\n        )}\n        {associationsSociation.length > 0 && (\n          <Grid.Row>\n            <div className={styles.words}>\n              {associationsSociation.map((association, i) => (\n                <Label\n                  horizontal\n                  key={association[0]}\n                  className={classNames(styles.word, i % 2 && styles.oddSociation)}\n                >\n                  {association[0]}\n                </Label>\n              ))}\n            </div>\n          </Grid.Row>\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nexport default withAuth(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}