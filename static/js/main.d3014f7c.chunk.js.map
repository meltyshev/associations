{"version":3,"sources":["use-field.js","App.jsx","index.js","App.module.css"],"names":["initialValue","useState","value","setValue","useCallback","nextValue","target","App","words","setWords","useField","word1","handleWord1Change","word2","handleWord2Change","useDebounce","word1Debounced","word2Debounced","useEffect","a","async","Loader","active","associations","word1Associations","word2Associations","forEach","word1Association","some","word2Association","push","sort","b","getAssociations","trim","toLowerCase","replace","Container","Grid","padded","Row","columns","Column","className","styles","column","Input","autoFocus","fluid","placeholder","size","onChange","map","association","i","Label","horizontal","key","classNames","word","odd","style","fontSize","ReactDOM","render","document","getElementById","module","exports"],"mappings":"+RAEe,WAACA,GAAkB,IAAD,EACLC,mBAASD,GADJ,mBACxBE,EADwB,KACjBC,EADiB,KAO/B,MAAO,CAACD,EAJaE,uBAAY,YAAuC,IAAnBC,EAAkB,EAAnCC,OAAUJ,MAC5CC,EAASE,KACR,IAE0BF,I,iBCwHhBI,G,OAvEH,WAAO,IAAD,EACUN,mBAAS,MADnB,mBACTO,EADS,KACFC,EADE,OAGmBC,EAAS,IAH5B,mBAGTC,EAHS,KAGFC,EAHE,OAImBF,EAAS,IAJ5B,mBAITG,EAJS,KAIFC,EAJE,OAMSC,YAAYJ,EAAO,KAArCK,EANS,sBAOSD,YAAYF,EAAO,KAArCI,EAPS,oBAehB,GANAC,qBAAU,WACP,EAAAC,EAAAC,OAAA,4DACCX,EADD,WAAAU,EAAA,MACgB,mCADhB,yEAGA,KAEEX,EACH,OAAO,kBAACa,EAAA,EAAD,CAAQC,QAAM,GAAd,gFAGT,IAGMC,EAnEgB,SAACf,EAAOG,EAAOE,GACrC,IAAIU,EAAe,GAEnB,GAAIZ,EAAO,CACT,IAAMa,EAAoBhB,EAAMG,GAEhC,GAAIE,EAAO,CACT,IAAMY,EAAoBjB,EAAMK,GAE5BW,GAAqBC,GACvBD,EAAkBE,SAAQ,SAAAC,GACxBF,EAAkBG,MAAK,SAAAC,GACrB,OAAIF,EAAiB,KAAOE,EAAiB,KAC3CN,EAAaO,KAAK,CAChBH,EAAiB,IAChBA,EAAiB,GAAKE,EAAiB,IAAM,KAGzC,cAONL,IACTD,EAAeC,GAgBnB,OAZAD,EAAaQ,MAAK,SAACZ,EAAGa,GACpB,OAAIb,EAAE,GAAKa,EAAE,IACH,EAGNb,EAAE,GAAKa,EAAE,GACJ,EAGF,KAGFT,EAyBcU,CAAgBzB,EAHlBQ,EAAekB,OAAOC,cAAcC,QAAQ,SAAK,UACjDnB,EAAeiB,OAAOC,cAAcC,QAAQ,SAAK,WAIpE,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACD,EAAA,EAAKE,IAAN,CAAUC,QAAS,GACjB,kBAACH,EAAA,EAAKI,OAAN,CAAaC,UAAWC,IAAOC,QAC7B,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAK,EACL9C,MAAOS,EACPsC,YAAY,iCACZC,KAAK,MACLC,SAAUvC,KAGd,kBAAC0B,EAAA,EAAKI,OAAN,KACE,kBAACI,EAAA,EAAD,CACEE,OAAK,EACL9C,MAAOW,EACPoC,YAAY,yFACZC,KAAK,MACLC,SAAUrC,MAIhB,kBAACwB,EAAA,EAAKE,IAAN,KACGjB,GACC,yBAAKoB,UAAWC,IAAOpC,OACpBe,EAAa6B,KAAI,SAACC,EAAaC,GAAd,OAChB,kBAACC,EAAA,EAAD,CACEC,YAAU,EACVC,IAAKJ,EAAY,GACjBV,UAAWe,IAAWd,IAAOe,KAAML,EAAI,GAAKV,IAAOgB,KACnDC,MAAO,CACLC,SAAS,GAAD,OAAKT,EAAY,GAAjB,QAGTA,EAAY,aCjH/BU,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,mBCJjDC,EAAOC,QAAU,CAAC,OAAS,oBAAoB,MAAQ,mBAAmB,KAAO,kBAAkB,IAAM,oB","file":"static/js/main.d3014f7c.chunk.js","sourcesContent":["import { useCallback, useState } from 'react';\n\nexport default (initialValue) => {\n  const [value, setValue] = useState(initialValue);\n\n  const handleChange = useCallback(({ target: { value: nextValue } }) => {\n    setValue(nextValue);\n  }, []);\n\n  return [value, handleChange, setValue];\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { useDebounce } from 'use-debounce';\nimport {\n  Container, Grid, Input, Label, Loader\n} from 'semantic-ui-react';\n\nimport useField from './use-field';\n\nimport styles from './App.module.css';\n\nimport 'semantic-ui-css/semantic.min.css';\n\nconst getAssociations = (words, word1, word2) => {\n  let associations = [];\n\n  if (word1) {\n    const word1Associations = words[word1];\n\n    if (word2) {\n      const word2Associations = words[word2];\n  \n      if (word1Associations && word2Associations) {\n        word1Associations.forEach(word1Association => {\n          word2Associations.some(word2Association => {\n            if (word1Association[0] === word2Association[0]) {\n              associations.push([\n                word1Association[0],\n                (word1Association[1] + word2Association[1]) / 2,\n              ]);\n  \n              return true;\n            }\n  \n            return false;\n          });\n        });\n      }\n    } else if (word1Associations) {\n      associations = word1Associations;\n    }\n  }\n\n  associations.sort((a, b) => {\n    if (a[1] > b[1]) {\n      return -1;\n    }\n\n    if (a[1] < b[1]) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  return associations;\n};\n\nconst App = () => {\n  const [words, setWords] = useState(null);\n\n  const [word1, handleWord1Change] = useField('');\n  const [word2, handleWord2Change] = useField('');\n\n  const [word1Debounced] = useDebounce(word1, 500);\n  const [word2Debounced] = useDebounce(word2, 500);\n\n  useEffect(() => {\n    (async () => {\n      setWords(await import('./words.json'));\n    })();\n  }, []);\n\n  if (!words) {\n    return <Loader active>Загружаю базу...</Loader>;\n  }\n\n  const word1Clean = word1Debounced.trim().toLowerCase().replace('ё', 'е');\n  const word2Clean = word2Debounced.trim().toLowerCase().replace('ё', 'е');\n\n  const associations = getAssociations(words, word1Clean, word2Clean);\n\n  return (\n    <Container>\n      <Grid padded>\n        <Grid.Row columns={2}>\n          <Grid.Column className={styles.column}>\n            <Input\n              autoFocus\n              fluid\n              value={word1}\n              placeholder=\"Слово\"\n              size=\"big\"\n              onChange={handleWord1Change}\n            />\n          </Grid.Column>\n          <Grid.Column>\n            <Input\n              fluid\n              value={word2}\n              placeholder=\"Вместе со словом\"\n              size=\"big\"\n              onChange={handleWord2Change}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          {associations && (\n            <div className={styles.words}>\n              {associations.map((association, i) => (\n                <Label\n                  horizontal\n                  key={association[0]}\n                  className={classNames(styles.word, i % 2 && styles.odd)}\n                  style={{\n                    fontSize: `${association[1]}em`,\n                  }}\n                >\n                  {association[0]}\n                </Label>\n              ))}\n            </div>\n          )}\n        </Grid.Row>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"column\":\"App_column__17gO4\",\"words\":\"App_words__1Oqw2\",\"word\":\"App_word__3aQvw\",\"odd\":\"App_odd__2GTiD\"};"],"sourceRoot":""}